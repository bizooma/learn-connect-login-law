// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://zloqccxqgatkpnngeqbq.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inpsb3FjY3hxZ2F0a3BubmdlcWJxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg2MzA5NjcsImV4cCI6MjA2NDIwNjk2N30.S2lE3tTqtW4AI8ER7BxWeXvYe56p7YEFPKQrG8WYcks";

console.log('üîß Supabase Client Configuration:', {
  url: SUPABASE_URL,
  domain: typeof window !== 'undefined' ? window.location.hostname : 'server',
  origin: typeof window !== 'undefined' ? window.location.origin : 'server',
  timestamp: new Date().toISOString()
});

// Validate Supabase configuration
if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
  console.error('‚ùå Missing Supabase configuration:', {
    hasUrl: !!SUPABASE_URL,
    hasKey: !!SUPABASE_PUBLISHABLE_KEY
  });
  throw new Error('Supabase configuration is incomplete');
}

console.log('üöÄ Creating Supabase client...');

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: typeof window !== 'undefined' ? window.localStorage : undefined,
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
    flowType: 'pkce'
  },
  global: {
    headers: {
      'X-Client-Info': 'newfrontier-lms-web',
      'X-Application-Name': 'NewFrontier-LMS'
    }
  }
});

console.log('‚úÖ Supabase client created successfully');

// Test connection only in browser environment
if (typeof window !== 'undefined') {
  supabase.auth.getSession().then(({ data, error }) => {
    if (error) {
      console.error('‚ö†Ô∏è Supabase auth session error:', error);
    } else {
      console.log('üìã Supabase auth session:', {
        hasSession: !!data.session,
        userId: data.session?.user?.id,
        email: data.session?.user?.email
      });
    }
  }).catch(err => {
    console.error('‚ùå Failed to get Supabase session:', err);
  });
}